// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: balance_transaction.sql

package sqlcgen

import (
	"context"

	decimal "github.com/shopspring/decimal"
)

const balanceTransaction_SumByUserID = `-- name: BalanceTransaction_SumByUserID :many
SELECT SUM(amount)::numeric AS sum, direction FROM balance_transactions WHERE user_id = $1 GROUP BY direction
`

type BalanceTransaction_SumByUserIDRow struct {
	Sum       decimal.Decimal
	Direction BalanceTransactionType
}

func (q *Queries) BalanceTransaction_SumByUserID(ctx context.Context, userID int64) ([]BalanceTransaction_SumByUserIDRow, error) {
	rows, err := q.db.Query(ctx, balanceTransaction_SumByUserID, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []BalanceTransaction_SumByUserIDRow
	for rows.Next() {
		var i BalanceTransaction_SumByUserIDRow
		if err := rows.Scan(&i.Sum, &i.Direction); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
